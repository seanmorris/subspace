body {
	flex-direction: column;
}

.terminal {
	width: 100%;
	min-height: 100%;
	position: relative;
	box-sizing: border-box;
	font-family: monospace;
}

.terminal .output p {
	display: flex;
	margin: 0px;
	white-space: pre-wrap;
	min-width: 0px;
	flex-wrap: nowrap;
}

.terminal .output p > span {
	display: block;
}

.terminal .bottom {
	display: flex;
	flex-direction: row;
	position: relative;
}

.terminal .bottom div:last-child {
	flex-grow: 1;
}

.terminal input,
.terminal textarea {
	width:       100%;
	padding:     0px;
	border:      none;
	color:       inherit;
	background:  inherit;
	font-family: inherit;
	font-size:   inherit;
	resize:      none;
	overflow:    hidden;

	pointer-events: none;
}

.terminal input:focus,
.terminal textarea:focus {
	outline: none;
}

.terminal .submit {
	font-family: inherit;
	position: fixed;
	right: 1em;
	bottom: 1em;
	padding: 1em;
	padding-left: 2em;
	padding-right: 2em;
	user-select: none;
	cursor: pointer;
}

.terminal .submit:active {
	right: 0.8em;
	bottom: 0.8em;
}

.terminal.inverted {
	transition: filter 0.2s ease-out, text-shadow 0s;
	filter: invert(100%);
}

.terminal.inverted span,
.terminal.inverted input {
	transition: filter 0.2s ease-out, text-shadow 0s;
}

.terminal .byte {
	word-break: keep-all;
}

.terminal.inverted .byte {
	filter: saturate(250%) brightness(200%);
}

@keyframes scan {
	from {
		background-position: 0px 0px;
	}
	to {
		background-position: 0px -12px;
	}
}


.nynex.window {
	background: #c0c0c0;
	border: 2px #c0c0c0 outset;
	color: black;
	text-shadow: none;
	position: relative;
	z-index: 1;
	font-size: 1rem;
	white-space: normal;

	width: 100%;
	min-height: 15em;
}

.nynex.window .titlebar {
	background: #190080;
	color: white;
	padding-left: 0.5em;

	height: 2em;

	display: flex;
	flex-direction: row;

	justify-content: flex-end;
	text-shadow: none;

	user-select: none;
}

.nynex.window .titlebar .title {
	display: flex;
	flex-grow: 1;
	justify-content: center;
	flex-direction: column;
	text-align: left;
	font-weight: bold;
}

.nynex.window .titlebar .button {
	background: #c0c0c0;
	border: 2px #c0c0c0 outset;
	color: black;
	padding: 0.25em;
	width: 2em;
	text-align: center;
	font-size: 0.2em;
}

.nynex.window .titlebar .button:active {
	border-style: inset;
}
/*.terminal .output p {
	flex-wrap: wrap;
}

.terminal .output p > span {
	display: contents;
	text-indent:  0em;
}
*/

@font-face {
	font-family: 'Unispace';
	font-weight:  normal;
	src:          url('/unispace rg.ttf');
}

@font-face {
	font-family: 'Unispace';
	font-weight:  900;
	src:          url('/unispace bd.ttf');
}

@font-face {
	font-family: 'UniFont';
	font-weight:  normal;
	src:          url('/unifont_csur-11.0.02.ttf');
}

@font-face {
	font-family: 'Junicode';
	font-weight:  normal;
	src:          url('/Junicode.woff');
}

@font-face {
	font-family: 'DejaVu';
	font-weight:  normal;
	src:          url('/DejaVuSansMono-webfont.ttf');
}


html, body {
	height: 100%;
	margin: 0px;
	box-sizing: border-box;
	word-break: break-all;
}

.terminal, .terminal * {
	font-family: monospace;
	font-family: 'Unispace';
	font-weight: bold;
	font-size: 9.5pt;
	line-height: 13pt;
	text-shadow: 0em 0em 0.25em currentColor;
}


.terminal {
	background-color: black;
	color: white;
	padding: 1em;
}

.scanlines{
	pointer-events: none;
	background-image: url(scanline.png);
	background-size: auto 20px;
	opacity: 0.55;
	position: fixed;
	top: 0px;
	left: 0px;
	right: 0px;
	height: 100%;
	animation-name: scan;
	animation-duration: 3s;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
}

.terminal.inverted + .scanlines {
	opacity: 0.125;
}
@keyframes scan {
	from {
		background-position: 0px 0px;
	}
	to {
		background-position: 0px -20px;
	}
}


/*# sourceMappingURL=app.css.map*/